<_TerroirAvatar cullFace="off" transparent="true"><uniform name="Time" type="int" value="0"/><uniform name="waterMap" type="sampler2D" value="1"/><uniform name="starryMap" type="sampler2D" value="2"/><uniform name="forestMap" type="sampler2D" value="3"/><uniform name="fps" type="float" value="0.4"/><vertexProgram>varying vec2 Texcoord;
    
    uniform int Time;
    uniform float fps;

    void main( void )
    {
        float time = (float(Time)/1000.0)*fps;
        Texcoord.x = gl_MultiTexCoord0.x ;
        Texcoord.y = gl_MultiTexCoord0.y ;
     	
        gl_Position = ftransform();	
        gl_ClipVertex = gl_ModelViewMatrix*gl_Vertex;
    }
  </vertexProgram><fragmentProgram>varying vec2 Texcoord;
   
    uniform sampler2D waterMap;
    uniform sampler2D starryMap;
    uniform sampler2D forestMap;

    uniform int Time;

    uniform int numSplotches;
    uniform vec4 splotchPositions[32];
    uniform float splotchRadius;
   
    void main( void )
    {
        vec4 color = vec4(0.0, 0.0, 0.0, 1.0); // default: black

    for (int i = 0; i &lt; numSplotches; ++i)
    {
        // circle shape
        float dx = Texcoord.x - splotchPositions[i].x;
        float dy = Texcoord.y - splotchPositions[i].y;
        float angle = atan(dy, dx); // Angle around the splotch center
        float dist = sqrt(dx*dx + dy*dy);

        // add sine wave border to create splotches
        float amplitude = 0.2 * splotchRadius; 
        float frequency = 8.0;  
        float splotchEdge = splotchRadius + amplitude * sin(frequency * angle);

        if (dist &lt; splotchEdge)
        {
            int type = int(splotchPositions[i].z);
            if (type == 0)
                color = texture2D(starryMap, Texcoord);
            else if (type == 1)
                color = texture2D(waterMap, Texcoord);
            else if (type == 2)
                color = texture2D(forestMap, Texcoord);
            break;
        }
    }

        gl_FragColor = color;

    }
  </fragmentProgram></_TerroirAvatar>