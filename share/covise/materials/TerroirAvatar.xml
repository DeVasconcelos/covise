<_TerroirAvatar cullFace="off" transparent="true"><uniform name="SplotchCellSize" type="float" value="1"/><uniform name="SplotchWaveNr" type="int" value="8"/><uniform name="Time" type="int" value="0"/><uniform name="waterMap" type="sampler2D" value="1"/><uniform name="starryMap" type="sampler2D" value="2"/><uniform name="forestMap" type="sampler2D" value="3"/><uniform name="fps" type="float" value="0.4"/><vertexProgram>varying vec2 Texcoord;
    
    uniform int Time;
    uniform float fps;

    void main( void )
    {
        float time = (float(Time)/1000.0)*fps;
        Texcoord.x = gl_MultiTexCoord0.x ;
        Texcoord.y = gl_MultiTexCoord0.y ;
     	
        gl_Position = ftransform();	
        gl_ClipVertex = gl_ModelViewMatrix*gl_Vertex;
    }
  </vertexProgram><fragmentProgram>varying vec2 Texcoord;
   
    uniform sampler2D waterMap;
    uniform sampler2D starryMap;
    uniform sampler2D forestMap;

    uniform int Time;
   
    uniform float SplotchCellSize;
    uniform int SplotchWaveNr;

    uniform vec3 splotchPositions[9]; // adjust size as needed
    uniform int splotchType[9];       // adjust size as needed
    uniform int numSplotches;           // actual number of splotches
   
    void main( void )
    {
    vec4 splotchColor = vec4(0.0, 0.0, 0.0, 1.0);
    float show = 0.0;

    // Get fragment position in world or plane coordinates
    vec2 fragPos = Texcoord; // If Texcoord is mapped to world/plane coordinates

    for (int i = 0; i &lt; numSplotches; ++i)
    {
        // Use only x/y for distance check
        float dist = distance(fragPos, splotchPositions[i].xy);

        // Wavy radius for splotch edge
        float angle = atan(fragPos.y - splotchPositions[i].y, fragPos.x - splotchPositions[i].x);
        float baseRadius = SplotchCellSize;
        float wave = 0.05 * sin(float(SplotchWaveNr) * angle + 0.005);
        float splotchRadius = baseRadius + wave;

        if (dist &lt; splotchRadius)
        {
            int sType = splotchType[i];
            if (sType == 0)
                splotchColor = texture2D(starryMap, Texcoord);
            else if (sType == 1)
                splotchColor = texture2D(waterMap, Texcoord);
            else if (sType == 2)
                splotchColor = texture2D(forestMap, Texcoord);
            else
                splotchColor = vec4(0.0, 0.0, 0.0, 1.0);

            show = 1.0;
            break; // Only one splotch per fragment
        }
    }

    gl_FragColor = mix(vec4(0.0, 0.0, 0.0, 1.0), splotchColor, show);      
    }
  </fragmentProgram></_TerroirAvatar>