CURDIR=$(shell unset PWD; /bin/pwd)
TOPDIR=$(shell echo $(COVISEDIR) | sed -e 's;/*$$;;')
PROJSRCDIR=$(TOPDIR)
RELSRCDIR=../..
ifeq ($(ARCHSUFFIX),)
BUILDDIR_PREFIX=$(COVISEDIR)/build
else
BUILDDIR_PREFIX=$(COVISEDIR)/$(ARCHSUFFIX)/build
endif
#INOPENCOVER=$(shell echo $(CURDIR) | grep -i opencover)
ifeq ($(INOPENCOVER),)
   PROJBUILDDIR=$(BUILDDIR_PREFIX).covise
   RELBUILDDIR=$(shell unset PWD; /bin/pwd | sed -e "s;^$(COVISEDIR);;" -e "s;^$(PROJDIR);;" -e "s;^/;;")
   BUILDDIR=$(PROJBUILDDIR)/$(shell unset PWD; /bin/pwd | sed -e "s;^$(COVISEDIR);;" -e "s;^$(PROJDIR);;")
else
   PROJBUILDDIR=$(BUILDDIR_PREFIX).cover
   RELBUILDDIR=$(shell unset PWD; /bin/pwd | sed -e "s;^$(COVISEDIR)/src/OpenCOVER;;" -e "s;^$(PROJDIR);;" -e "s;^/;;")
   PROJSRCDIR=$(TOPDIR)/src/OpenCOVER
   RELSRCDIR=../../src/OpenCOVER
endif
BUILDDIR=$(PROJBUILDDIR)/$(RELBUILDDIR)
ifeq ($(COVISE_NINJA),)
   MAKEFILE=$(BUILDDIR)/Makefile
   GENERATOR="Unix Makefiles"

first: makefile 
	cd $(BUILDDIR) && $(MAKE) -f $(MAKEFILE)

verbose: makefile 
	cd $(BUILDDIR) && $(MAKE) -f $(MAKEFILE) VERBOSE=1

clean: makefile
	cd $(BUILDDIR) && $(MAKE) -f $(MAKEFILE) $@

install: makefile
	cd $(BUILDDIR) && $(MAKE) -f $(MAKEFILE) $@
else
   MAKEFILE=$(PROJBUILDDIR)/build.ninja
   GENERATOR="Ninja"
ifeq ($(RELBUILDDIR),)
      TARGETPREFIX=
else
      TARGETPREFIX=$(RELBUILDDIR)/
endif
ifeq ($(INOPENCOVER),)
ifeq ($(CURDIR),$(PROJSRCDIR)/src)
	DEFAULTTARGET=
else
	DEFAULTTARGET=$(TARGETPREFIX)all
endif
else
ifeq ($(CURDIR),$(PROJSRCDIR))
	DEFAULTTARGET=
else
	DEFAULTTARGET=$(TARGETPREFIX)all
endif
endif

first: makefile 
	cd $(PROJBUILDDIR) && ninja $(COVISE_NINJA_OPTIONS) $(DEFAULTTARGET)

verbose: makefile 
	cd $(PROJBUILDDIR) && ninja $(COVISE_NINJA_OPTIONS) -v $(DEFAULTTARGET)

clean: makefile
	cd $(PROJBUILDDIR) && ninja $(COVISE_NINJA_OPTIONS) clean

install: makefile
	cd $(PROJBUILDDIR) && ninja $(COVISE_NINJA_OPTIONS) $(TARGETPREFIX)install
endif


makefile: $(MAKEFILE)

$(MAKEFILE):
	@echo trying to make $(MAKEFILE)
	mkdir -p $(PROJBUILDDIR)
ifeq ($(ARCHSUFFIX),mingw)
	@echo "running '$(COVISE_CMAKE) $(COVISE_CMAKE_OPTIONS) -G $(GENERATOR) $(RELSRCDIR)' in $(PROJBUILDDIR)" && \
	cd $(PROJBUILDDIR) && $(COVISE_CMAKE)  $(COVISE_CMAKE_OPTIONS) -G $(GENERATOR) $(RELSRCDIR) \
      -DCMAKE_TOOLCHAIN_FILE=$(COVISEDIR)/cmake/Toolchain-cross-mingw32-linux.cmake \
      -DCMAKE_INSTALL_PREFIX=$(COVISEDIR)/mingw \
      -DCMAKE_BUILD_TYPE=Debug
else ifeq ($(ARCHSUFFIX),mingwopt)
	@echo "running '$(COVISE_CMAKE) $(COVISE_CMAKE_OPTIONS) -G $(GENERATOR) $(RELSRCDIR)' in $(PROJBUILDDIR)" && \
	cd $(PROJBUILDDIR) && $(COVISE_CMAKE) $(COVISE_CMAKE_OPTIONS) -G $(GENERATOR) $(RELSRCDIR) \
      -DCMAKE_TOOLCHAIN_FILE=$(COVISEDIR)/cmake/Toolchain-cross-mingw32-linux.cmake \
      -DCMAKE_INSTALL_PREFIX=$(COVISEDIR)/mingwopt \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo
else
	@echo "running '$(COVISE_CMAKE) $(COVISE_CMAKE_OPTIONS) -G $(GENERATOR) $(RELSRCDIR)' in $(PROJBUILDDIR)" && \
	cd $(PROJBUILDDIR) && $(COVISE_CMAKE) $(COVISE_CMAKE_OPTIONS) -G $(GENERATOR) $(RELSRCDIR)
endif

$(PROJBUILDDIR):
	mkdir -p $(PROJBUILDDIR)

$(BUILDDIR):
	mkdir -p $(BUILDDIR)
#
# TODO these have to be converted to cmake
#


# indent html docupdate tex pdf: makefile
#     $(MAKE) -f $(MAKEFILE) QMAKE=$(QMAKE) QMAKEFLAGS=$(QMAKEFLAGS) $@
